/* Copyright (c) <2009> <Newton Game Dynamics>
* 
* This software is provided 'as-is', without any express or implied
* warranty. In no event will the authors be held liable for any damages
* arising from the use of this software.
* 
* Permission is granted to anyone to use this software for any purpose,
* including commercial applications, and to alter it and redistribute it
* freely
*/

import <string.nsl>
import <console.nsl>

// Find the primes numbers in the first n integers using The Sieve Of Eratosthenes
class sieves
{
	sieves (int n)
	{
		//m_data = new int (n)
		
		//Initialize the first n integer array
		for ( int i = 0; i; i = i + 1) {   
          m_data[i] = i;
        }

		// apply Eratosthenes algorithm
        //for(int i = 1; i < n; i = i + 1) {
        for(int i = 1; i; i = i + 1 ) {
			if(m_data[i]) {
				//for(int j = i; j * i < n; j = j + 1) {
				for(int j = i ; j * i ; j = j + 1) {
					//is a multiple of num[i]
					m_data[j * i] = 0
				}
			}
		}
	}
	
	int[] m_data;
}

/*
void main()
{
     int num[100], i, j;
     
     
     for(i=1;i<=99;i++)
     {
          if(num[i]!=0)
          {
               for(j=(i+1);j<=99;j++)
               {
                    if(num[j]!=0)
                    {
                         if((num[j]%num[i])==0)     //check if num[j] 
                         num[j]=0;                    //is a multiple of num[i]
                                                      //if it is a multiple then set it to 0
                    }
               }
          }
     }
 
     for(i=0;i<=99;i++)
     {
          if(num[i]!=0)                    //Print all non zero numbers (prime numbers)
               printf("\n%d",num[i]);
     }
}


class helloWorld
{
	helloWorld ()
	{
	}
}
*/