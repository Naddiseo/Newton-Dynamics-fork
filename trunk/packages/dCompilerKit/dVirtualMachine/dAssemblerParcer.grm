
/* Copyright (c) <2009> <Newton Game Dynamics>
* 
* This software is provided 'as-is', without any express or implied
* warranty. In no event will the authors be held liable for any damages
* arising from the use of this software.
* 
* Permission is granted to anyone to use this software for any purpose,
* including commercial applications, and to alter it and redistribute it
* freely
*/

%{
#include <dVirtualMachine.h>
#include "dAssemblerLexical.h"
#include "dAssemblerCompiler.h"
//
// Newton virtual machine assembler grammar
// based loosely on a subset of the MIPS R3000 and the Intel 386 instructions set 
//
%}






// very simple sample SLR(1) grammar 
%union 
{
	class dUserVariable: public string
	{
		public:
		dUserVariable () 
			:string("")
		{
		}
		
		dUserVariable (dToken token, const char* const text)
			:string (text), m_token(token)
		{
		}
		dToken m_token;
	};
}

%token id
%start E

%%
E	: E '+' T		{$$ = $1 + " + " + $2; printf ("%s\n", $$.c_str());}
	| T				{$$ = $1;}
	;
	
T	: T '*'	F		{$$ = $1 + " * " + $2;}
	| F				{$$ = $1;}
	;
	
F	: '(' E ')'		{$$ = $2;}
	| id			{$$ = $1;}
	;
		
%%

